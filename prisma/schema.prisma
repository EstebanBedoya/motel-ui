// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  employee
}

enum RoomStates {
  available
  ocuppied
  mantainance
  cleaning
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     Role     @default(employee)
  rooms    Record[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Room {
  id         Int          @id @unique
  prices     Price[]
  records    Record[]
  name       String
  type       String
  state      RoomStates   @default(available)
  aditionals Aditionals[]
  createAt   DateTime     @default(now())
  updateAt   DateTime     @updatedAt
}

model PriceType {
  id       Int      @id @unique
  name     String
  price    Price[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Price {
  id          Int       @id @default(autoincrement())
  room        Room      @relation(fields: [roomId], references: [id])
  roomId      Int
  priceType   PriceType @relation(fields: [priceTypeId], references: [id])
  priceTypeId Int
  weekday     Float
  weekend     Float
  special     Float?
  startDate   DateTime?
  endDate     DateTime?
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
}

model Record {
  id          Int      @id @default(autoincrement())
  roomId      Int
  room        Room     @relation(fields: [roomId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  typeService String
  checkIn     DateTime
  checkOut    DateTime
  extensions  Int
  aditionals  String[]
  total       Int
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Aditionals {
  id       Int      @id @default(autoincrement())
  room     Room     @relation(fields: [roomId], references: [id])
  roomId   Int
  name     String
  price    Float
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
